'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _metaConstants = require('./metaConstants');

var _metaApi = require('./metaApi');

require('rxjs/add/operator/mapTo');

require('rxjs/add/operator/map');

require('rxjs/add/operator/mergeMap');

var _preactRouterRedux = require('preact-router-redux');

var conectionOff = function conectionOff(action$) {
  return action$.ofType(_metaConstants.CONECTION_START).map(function (action) {
    return { type: _metaConstants.CONECTION_SETTINGS, payload: { conection: false, ws: action.payload } };
  });
};

var conectionAction = function conectionAction(action$, store, _ref) {
  var wsAPI = _ref.wsAPI;
  return action$.ofType(_metaConstants.CONECTION_START).mergeMap(function (url) {
    return wsAPI.conect(url.payload);
  }).mapTo({ type: _metaConstants.CONECTION_SUCCESS, payload: { conection: true } });
};

var changeUrlAction = function changeUrlAction(action$, store, _ref2) {
  var wsAPI = _ref2.wsAPI;
  return action$.ofType(_metaConstants.CONECTION_CHANGE_URL).mergeMap(function (url) {
    return (0, _metaApi.changeUrl)(wsAPI, url.payload);
  }).mapTo({ type: _metaConstants.CONECTION_SUCCESS, payload: { conection: true } });
};

var loadHostname = function loadHostname(action$, store, _ref3) {
  var wsAPI = _ref3.wsAPI;
  return action$.ofType.apply(action$, [_metaConstants.CONECTION_LOAD_HOSTNAME, _metaConstants.AUTH_LOGIN_SUCCESS]).mergeMap(function () {
    return (0, _metaApi.getHostname)(wsAPI, store.getState().meta.sid);
  }).map(function (payload) {
    return { type: _metaConstants.CONECTION_LOAD_HOSTNAME_SUCCESS, payload: payload };
  });
};

var loadNetwork = function loadNetwork(action$, store, _ref4) {
  var wsAPI = _ref4.wsAPI;
  return action$.ofType.apply(action$, [_metaConstants.CONECTION_LOAD_NEIGHBORS, _metaConstants.CONECTION_LOAD_HOSTNAME_SUCCESS]).mergeMap(function () {
    return (0, _metaApi.getCloudNodes)(wsAPI, store.getState().meta.sid);
  }).map(function (payload) {
    return { type: _metaConstants.CONECTION_LOAD_NEIGHBORS_SUCCESS, payload: payload };
  });
};

var defaultLoginAction = function defaultLoginAction(action$) {
  return action$.ofType(_metaConstants.CONECTION_SUCCESS).mapTo({ type: _metaConstants.AUTH_LOGIN, payload: { user: 'admin', password: 'admin' } });
};

var loginAction = function loginAction(action$, store, _ref5) {
  var wsAPI = _ref5.wsAPI;
  return action$.ofType(_metaConstants.AUTH_LOGIN).mergeMap(function (action) {
    return (0, _metaApi.login)(wsAPI, action.payload);
  }).map(function (sid) {
    return { type: _metaConstants.AUTH_LOGIN_SUCCESS, payload: sid };
  });
};

var redirectOnConnection = function redirectOnConnection(action$, store) {
  return action$.ofType(_metaConstants.CONECTION_SUCCESS).mapTo((0, _preactRouterRedux.push)(store.getState().meta.home));
};

exports.default = {
  conectionOff: conectionOff,
  conectionAction: conectionAction,
  changeUrlAction: changeUrlAction,
  loadNetwork: loadNetwork,
  loadHostname: loadHostname,
  defaultLoginAction: defaultLoginAction,
  loginAction: loginAction,
  redirectOnConnection: redirectOnConnection
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9tZXRhRXBpY3MuanMiXSwibmFtZXMiOlsiY29uZWN0aW9uT2ZmIiwiYWN0aW9uJCIsIm9mVHlwZSIsIm1hcCIsImFjdGlvbiIsInR5cGUiLCJwYXlsb2FkIiwiY29uZWN0aW9uIiwid3MiLCJjb25lY3Rpb25BY3Rpb24iLCJzdG9yZSIsIndzQVBJIiwibWVyZ2VNYXAiLCJjb25lY3QiLCJ1cmwiLCJtYXBUbyIsImNoYW5nZVVybEFjdGlvbiIsImxvYWRIb3N0bmFtZSIsImdldFN0YXRlIiwibWV0YSIsInNpZCIsImxvYWROZXR3b3JrIiwiZGVmYXVsdExvZ2luQWN0aW9uIiwidXNlciIsInBhc3N3b3JkIiwibG9naW5BY3Rpb24iLCJyZWRpcmVjdE9uQ29ubmVjdGlvbiIsImhvbWUiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOztBQWNBOztBQU9BOztBQUNBOztBQUNBOztBQUVBOztBQUVBLElBQU1BLGVBQWUsU0FBZkEsWUFBZSxDQUFFQyxPQUFGO0FBQUEsU0FDbkJBLFFBQVFDLE1BQVIsaUNBQ0dDLEdBREgsQ0FDTyxVQUFDQyxNQUFEO0FBQUEsV0FBYSxFQUFDQyx1Q0FBRCxFQUEyQkMsU0FBUyxFQUFDQyxXQUFXLEtBQVosRUFBbUJDLElBQUlKLE9BQU9FLE9BQTlCLEVBQXBDLEVBQWI7QUFBQSxHQURQLENBRG1CO0FBQUEsQ0FBckI7O0FBSUEsSUFBTUcsa0JBQWtCLFNBQWxCQSxlQUFrQixDQUFFUixPQUFGLEVBQVdTLEtBQVg7QUFBQSxNQUFvQkMsS0FBcEIsUUFBb0JBLEtBQXBCO0FBQUEsU0FDdEJWLFFBQVFDLE1BQVIsaUNBQ0dVLFFBREgsQ0FDYTtBQUFBLFdBQU9ELE1BQU1FLE1BQU4sQ0FBYUMsSUFBSVIsT0FBakIsQ0FBUDtBQUFBLEdBRGIsRUFFR1MsS0FGSCxDQUVTLEVBQUVWLHNDQUFGLEVBQTJCQyxTQUFTLEVBQUVDLFdBQVcsSUFBYixFQUFwQyxFQUZULENBRHNCO0FBQUEsQ0FBeEI7O0FBS0EsSUFBTVMsa0JBQWtCLFNBQWxCQSxlQUFrQixDQUFFZixPQUFGLEVBQVdTLEtBQVg7QUFBQSxNQUFvQkMsS0FBcEIsU0FBb0JBLEtBQXBCO0FBQUEsU0FDdEJWLFFBQVFDLE1BQVIsc0NBQ0dVLFFBREgsQ0FDYTtBQUFBLFdBQU8sd0JBQVVELEtBQVYsRUFBaUJHLElBQUlSLE9BQXJCLENBQVA7QUFBQSxHQURiLEVBRUdTLEtBRkgsQ0FFUyxFQUFFVixzQ0FBRixFQUEyQkMsU0FBUyxFQUFFQyxXQUFXLElBQWIsRUFBcEMsRUFGVCxDQURzQjtBQUFBLENBQXhCOztBQUtBLElBQU1VLGVBQWUsU0FBZkEsWUFBZSxDQUFFaEIsT0FBRixFQUFXUyxLQUFYO0FBQUEsTUFBb0JDLEtBQXBCLFNBQW9CQSxLQUFwQjtBQUFBLFNBQ25CVixRQUFRQyxNQUFSLGdCQUFrQiwyRUFBbEIsRUFDR1UsUUFESCxDQUNZO0FBQUEsV0FBTSwwQkFBWUQsS0FBWixFQUFtQkQsTUFBTVEsUUFBTixHQUFpQkMsSUFBakIsQ0FBc0JDLEdBQXpDLENBQU47QUFBQSxHQURaLEVBRUdqQixHQUZILENBRU87QUFBQSxXQUFZLEVBQUNFLG9EQUFELEVBQXVDQyxnQkFBdkMsRUFBWjtBQUFBLEdBRlAsQ0FEbUI7QUFBQSxDQUFyQjs7QUFLQSxJQUFNZSxjQUFjLFNBQWRBLFdBQWMsQ0FBRXBCLE9BQUYsRUFBV1MsS0FBWDtBQUFBLE1BQW9CQyxLQUFwQixTQUFvQkEsS0FBcEI7QUFBQSxTQUNsQlYsUUFBUUMsTUFBUixnQkFBa0IseUZBQWxCLEVBQ0dVLFFBREgsQ0FDWTtBQUFBLFdBQU0sNEJBQWNELEtBQWQsRUFBb0JELE1BQU1RLFFBQU4sR0FBaUJDLElBQWpCLENBQXNCQyxHQUExQyxDQUFOO0FBQUEsR0FEWixFQUVHakIsR0FGSCxDQUVPO0FBQUEsV0FBWSxFQUFDRSxxREFBRCxFQUF3Q0MsZ0JBQXhDLEVBQVo7QUFBQSxHQUZQLENBRGtCO0FBQUEsQ0FBcEI7O0FBS0EsSUFBTWdCLHFCQUFxQixTQUFyQkEsa0JBQXFCLENBQUVyQixPQUFGO0FBQUEsU0FDekJBLFFBQVFDLE1BQVIsbUNBQ0dhLEtBREgsQ0FDUyxFQUFFViwrQkFBRixFQUFvQkMsU0FBUyxFQUFDaUIsTUFBTSxPQUFQLEVBQWdCQyxVQUFVLE9BQTFCLEVBQTdCLEVBRFQsQ0FEeUI7QUFBQSxDQUEzQjs7QUFJQSxJQUFNQyxjQUFjLFNBQWRBLFdBQWMsQ0FBRXhCLE9BQUYsRUFBV1MsS0FBWDtBQUFBLE1BQW9CQyxLQUFwQixTQUFvQkEsS0FBcEI7QUFBQSxTQUNsQlYsUUFBUUMsTUFBUiw0QkFDR1UsUUFESCxDQUNhO0FBQUEsV0FBVSxvQkFBTUQsS0FBTixFQUFZUCxPQUFPRSxPQUFuQixDQUFWO0FBQUEsR0FEYixFQUVHSCxHQUZILENBRU8sVUFBQ2lCLEdBQUQ7QUFBQSxXQUFVLEVBQUVmLHVDQUFGLEVBQTRCQyxTQUFTYyxHQUFyQyxFQUFWO0FBQUEsR0FGUCxDQURrQjtBQUFBLENBQXBCOztBQUtBLElBQU1NLHVCQUF1QixTQUF2QkEsb0JBQXVCLENBQUV6QixPQUFGLEVBQVdTLEtBQVg7QUFBQSxTQUMzQlQsUUFBUUMsTUFBUixtQ0FDR2EsS0FESCxDQUNTLDZCQUFLTCxNQUFNUSxRQUFOLEdBQWlCQyxJQUFqQixDQUFzQlEsSUFBM0IsQ0FEVCxDQUQyQjtBQUFBLENBQTdCOztrQkFLZTtBQUNiM0IsNEJBRGE7QUFFYlMsa0NBRmE7QUFHYk8sa0NBSGE7QUFJYkssMEJBSmE7QUFLYkosNEJBTGE7QUFNYkssd0NBTmE7QUFPYkcsMEJBUGE7QUFRYkM7QUFSYSxDIiwiZmlsZSI6Im1ldGFFcGljcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIENPTkVDVElPTl9TVEFSVCxcbiAgQ09ORUNUSU9OX0VSUk9SLFxuICBDT05FQ1RJT05fU1VDQ0VTUyxcbiAgQ09ORUNUSU9OX0NIQU5HRV9VUkwsXG4gIENPTkVDVElPTl9TRVRUSU5HUyxcbiAgQ09ORUNUSU9OX0xPQURfTkVJR0hCT1JTLFxuICBDT05FQ1RJT05fTE9BRF9ORUlHSEJPUlNfU1VDQ0VTUyxcbiAgQ09ORUNUSU9OX0xPQURfSE9TVE5BTUUsXG4gIENPTkVDVElPTl9MT0FEX0hPU1ROQU1FX1NVQ0NFU1MsXG4gIEFVVEhfTE9HSU4sXG4gIEFVVEhfTE9HSU5fU1VDQ0VTU1xufSBmcm9tICcuL21ldGFDb25zdGFudHMnO1xuXG5pbXBvcnQge1xuICBjaGFuZ2VVcmwsXG4gIGdldEhvc3RuYW1lLFxuICBnZXRDbG91ZE5vZGVzLFxuICBsb2dpblxufSBmcm9tICcuL21ldGFBcGknO1xuXG5pbXBvcnQgJ3J4anMvYWRkL29wZXJhdG9yL21hcFRvJztcbmltcG9ydCAncnhqcy9hZGQvb3BlcmF0b3IvbWFwJztcbmltcG9ydCAncnhqcy9hZGQvb3BlcmF0b3IvbWVyZ2VNYXAnO1xuXG5pbXBvcnQgeyBwdXNoIH0gZnJvbSAncHJlYWN0LXJvdXRlci1yZWR1eCc7XG5cbmNvbnN0IGNvbmVjdGlvbk9mZiA9ICggYWN0aW9uJCApID0+XG4gIGFjdGlvbiQub2ZUeXBlKENPTkVDVElPTl9TVEFSVClcbiAgICAubWFwKChhY3Rpb24pID0+ICh7dHlwZTogQ09ORUNUSU9OX1NFVFRJTkdTLCBwYXlsb2FkOiB7Y29uZWN0aW9uOiBmYWxzZSwgd3M6IGFjdGlvbi5wYXlsb2FkIH19KSk7XG5cbmNvbnN0IGNvbmVjdGlvbkFjdGlvbiA9ICggYWN0aW9uJCwgc3RvcmUsIHsgd3NBUEkgfSApID0+XG4gIGFjdGlvbiQub2ZUeXBlKENPTkVDVElPTl9TVEFSVClcbiAgICAubWVyZ2VNYXAoIHVybCA9PiB3c0FQSS5jb25lY3QodXJsLnBheWxvYWQpKVxuICAgIC5tYXBUbyh7IHR5cGU6IENPTkVDVElPTl9TVUNDRVNTLCBwYXlsb2FkOiB7IGNvbmVjdGlvbjogdHJ1ZSB9IH0pO1xuXG5jb25zdCBjaGFuZ2VVcmxBY3Rpb24gPSAoIGFjdGlvbiQsIHN0b3JlLCB7IHdzQVBJIH0gKSA9PlxuICBhY3Rpb24kLm9mVHlwZShDT05FQ1RJT05fQ0hBTkdFX1VSTClcbiAgICAubWVyZ2VNYXAoIHVybCA9PiBjaGFuZ2VVcmwod3NBUEksIHVybC5wYXlsb2FkKSlcbiAgICAubWFwVG8oeyB0eXBlOiBDT05FQ1RJT05fU1VDQ0VTUywgcGF5bG9hZDogeyBjb25lY3Rpb246IHRydWUgfSB9KTtcblxuY29uc3QgbG9hZEhvc3RuYW1lID0gKCBhY3Rpb24kLCBzdG9yZSwgeyB3c0FQSSB9KSA9PlxuICBhY3Rpb24kLm9mVHlwZSguLi5bQ09ORUNUSU9OX0xPQURfSE9TVE5BTUUsQVVUSF9MT0dJTl9TVUNDRVNTXSlcbiAgICAubWVyZ2VNYXAoKCkgPT4gZ2V0SG9zdG5hbWUod3NBUEksIHN0b3JlLmdldFN0YXRlKCkubWV0YS5zaWQpKVxuICAgIC5tYXAocGF5bG9hZCA9PiAoe3R5cGU6Q09ORUNUSU9OX0xPQURfSE9TVE5BTUVfU1VDQ0VTUywgcGF5bG9hZH0pKTtcblxuY29uc3QgbG9hZE5ldHdvcmsgPSAoIGFjdGlvbiQsIHN0b3JlLCB7IHdzQVBJIH0pID0+XG4gIGFjdGlvbiQub2ZUeXBlKC4uLltDT05FQ1RJT05fTE9BRF9ORUlHSEJPUlMsIENPTkVDVElPTl9MT0FEX0hPU1ROQU1FX1NVQ0NFU1NdKVxuICAgIC5tZXJnZU1hcCgoKSA9PiBnZXRDbG91ZE5vZGVzKHdzQVBJLHN0b3JlLmdldFN0YXRlKCkubWV0YS5zaWQpKVxuICAgIC5tYXAocGF5bG9hZCA9PiAoe3R5cGU6Q09ORUNUSU9OX0xPQURfTkVJR0hCT1JTX1NVQ0NFU1MsIHBheWxvYWR9KSk7XG4gXG5jb25zdCBkZWZhdWx0TG9naW5BY3Rpb24gPSAoIGFjdGlvbiQgKSA9PlxuICBhY3Rpb24kLm9mVHlwZShDT05FQ1RJT05fU1VDQ0VTUylcbiAgICAubWFwVG8oeyB0eXBlOiBBVVRIX0xPR0lOLCBwYXlsb2FkOiB7dXNlcjogJ2FkbWluJywgcGFzc3dvcmQ6ICdhZG1pbid9fSk7XG5cbmNvbnN0IGxvZ2luQWN0aW9uID0gKCBhY3Rpb24kLCBzdG9yZSwgeyB3c0FQSSB9ICkgPT5cbiAgYWN0aW9uJC5vZlR5cGUoQVVUSF9MT0dJTilcbiAgICAubWVyZ2VNYXAoIGFjdGlvbiA9PiBsb2dpbih3c0FQSSxhY3Rpb24ucGF5bG9hZCkpXG4gICAgLm1hcCgoc2lkKSA9PiAoeyB0eXBlOiBBVVRIX0xPR0lOX1NVQ0NFU1MsIHBheWxvYWQ6IHNpZCB9KSk7XG5cbmNvbnN0IHJlZGlyZWN0T25Db25uZWN0aW9uID0gKCBhY3Rpb24kLCBzdG9yZSApID0+XG4gIGFjdGlvbiQub2ZUeXBlKENPTkVDVElPTl9TVUNDRVNTKVxuICAgIC5tYXBUbyhwdXNoKHN0b3JlLmdldFN0YXRlKCkubWV0YS5ob21lKSk7XG5cblxuZXhwb3J0IGRlZmF1bHQge1xuICBjb25lY3Rpb25PZmYsXG4gIGNvbmVjdGlvbkFjdGlvbixcbiAgY2hhbmdlVXJsQWN0aW9uLFxuICBsb2FkTmV0d29yayxcbiAgbG9hZEhvc3RuYW1lLFxuICBkZWZhdWx0TG9naW5BY3Rpb24sXG4gIGxvZ2luQWN0aW9uLFxuICByZWRpcmVjdE9uQ29ubmVjdGlvblxufTsiXX0=